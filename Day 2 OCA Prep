Q13. What is the output of the following code snippet?
3:  int x1 = 50, x2 = 75;
4:  boolean b = x1 >= x2;
5:  if(b = true) System.out.println("Success");
6:  else System.out.println("Failure");
•	  A. Success
•	  B. Failure
•	  C. The code will not compile becasue of line 4.
•	  D. The code will not compile becasue of line 5.
A13.
The code compiles successfully, so options C and D are incorrect. The value of b after line 4 is false. However, the if-then statement on line 5 contains an assignment, not a comparison. The variable b is assigned true on line 3, and the assignment operator returns true, so line 5 executes and displays Success, so the answer is option A.
Q14. What is the output of the following code snippet?
3:  int c = 7;
4:  int result = 4;
5:  result += ++c;
6:  System.out.println(result);
•	  A. 8
•	  B. 11
•	  C. 12
•	  D. 15
•	  E. 16
•	  F. The code will not compile because of line 5.
A14.
The code compiles successfully, so option F is incorrect. On line 5, the pre-increment operator is used, so c is incremented to 4 and the new value is returned to the expression. The value of 12, whihc is output on line 6. Therefore, option C is the correct answer.
Q15. What is the out of the following code snippet?
3:  int x = 1, y = 15;
4:  while x < 10
5:    y--;
6:    x++;
7:  System.out.println(x+", "+y);
•	  A. 10, 5
•	  B. 10, 6
•	  C. 11, 5
•	  D. The code will not compile becasue of line 3.
•	  E. The code will not compile becasue of line 4.
•	  F. The code contains and infinite loop and does not terminate.
A15.
This is actually a much simpler problem than it appears to be. The while statement on line 4 is missing parentheses, so the code will not compile, and option E is the correct answer. If the parentheses were added, through, option F would be the correct answer since the loop does not use curly braces to include x++ and the boolean expression never changes. Finally, if curly braces were added around both expressions, the output would be 10, 6 and option B would be correct.
Q16. What is the out of the following code snippet?
3:  do {
4:    int y = 1;
5:    System.out.print(y++ + " ");
6:  } while(y <= 10);
•	  A. 1 2 3 4 5 6 7 8 9
•	  B. 1 2 3 4 5 6 7 8 9 10
•	  C. 1 2 3 4 5 6 7 8 9 10 11
•	  D. The code will not compile becasue of line 6.
•	  E. The code contains and infinite loop and does not terminate.
A16.
The variable y is declared within the body of the do-while statement, so it is out of scope on line 6. Line 6 generates a compiler error, so option D is the correct answer.
Q17. What is the out of the following code snippet?
3:  boolean keepGoing = true;
4:  int result = 15, i = 10;
5:  do {
6:    i--;
7:    if(i==8) keepGoing = false;
8:    result -=2;
9:  } while(keepGoing);
10: System.out.println(result);
•	  A. 7
•	  B. 9
•	  C. 10
•	  D. 11
•	  E. 15
•	  F. The code will not compile because of line 8.
A17.
The code compiles without issue, so option F is incorrect. After the first execution of the loop, i is decremented to 9 and result to 13. Since i is not 8, keepGoing remains true, and the loop continues. On the next iteration, i is decremented to 8 and result to 11. On the second execution, i does equal 8, so keepGoing is set to false. At the conclusion of the loop, the loop terminates since keepGoing is no longer true. The value of result is 11, and the correct answer is option D.
Q18. What is the output of the following code snippet?
3:  int count = 0;
4:  ROW_LOOP: for(int row = 1; row <=3; row++)
5:    for(int col = 1; col <=2 ; col++) {
6:      if(row * col % 2 == 0) continue ROW_LOOP;
7:      count++;
8:    }
9:  System.out.println(count);
•	  A. 1
•	  B. 2
•	  C. 3
•	  D. 4
•	  E. 6
•	  F. The code will not compile because of line 6.
A18.
The expression on line 5 is true when row * col is an even number. On the first iteration, row = 1 and col = 1, so the expression on line 6 is false, the continue is skipped, and count is incremented to 1. On the second iteration, row = 1 and col = 2, so the expression on line 6 is true and the continue ends the outer loop with count still at 1. On the third iteration, row = 2 and col = 1, so the expression on line 6 is true and the continue ends the outer loop with count still at 1. On the fourth iteration, row = 3 and col = 1, so the expression on line 6 is false the continue is skipped, and count is incremented to 2. The result of 2 is displayed, so the answer is option B.
Q19. What is the output of the following code snippet?
3:  int m = 9, n = 1, x = 0;
4:  while(m > n) {
5:    m--;
6:    n += 2;
7:    x += m + n;
8:  }
9:  Systen.out.println(x);
•	  A. 11
•	  B. 13
•	  C. 23
•	  D. 36
•	  E. 50
•	  F. The code will not compile because of line 7.
A19.
Prior to the first iteration, m = 9, n = 1, and x = 0. After the iteration of the firat loop, m is updated to 8, n to 3, and x to the sum of the new values for m + n, 0 + 11 = 11. After the iteration of the second loop, m is updated to 7, n to 5, and x to the sum of the new values for m + n, 11 + 12 = 23. After the iteration of the third loop, m is updated to 6, n to 7, and x ro the sume of the new values for m + n, 23 + 13 = 36. On the fourth iteration of the loop, m > n evaluates to false, as 6 > 7 is not true. The loop ends and the most recent value of x, 36, is output, so the correct answer is option D.
Q20. What is the output of the following code snippet?
3:  final char a = 'A', d = 'D';
4:  char grade = 'B';
5:  switch(grade) {
6:    case a:
7:    case 'B': System.out.print("great");
8:    case 'C': System.out.print("good"); break;
9:    case d: 
10:   case 'F': System.out.print("not good");
11: }
•	  A. great
•	  B. greatgood
•	  C. The code will not compile because of line 3.
•	  D. The code will not compile because of line 6.
•	  E. The code will not compile because of line 6 and 9.
A20.
The code compiles and runs with out issue, so options C, D, and E are not correct. The value of grade is 'B' and there is a matching case statement that will cause "great" to be printed. There is no break statement after the case, though, so the next case statement will be reached, and "good" will be printed. There is a break after this case statement, though, so the switch statement will end. The correct answer is thus option B.

